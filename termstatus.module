<?php

/**
 * @file
 * Contains termstatus.module.
 */

use Drupal\termstatus\EntityOperations;
use Drupal\termstatus\EntityTypeInfo;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityTypeInterface;

/**
 * Implements hook_entity_base_field_info().
 */
function termstatus_entity_base_field_info(EntityTypeInterface $entity_type) {
  return \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(EntityTypeInfo::class)
    ->entityBaseFieldInfo($entity_type);
}

/**
 * Implements hook_entity_insert().
 */
function termstatus_entity_insert(EntityInterface $entity) {
  return \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(EntityOperations::class)
    ->entityInsert($entity);
}

/**
 * Implements hook_entity_update().
 */
function termstatus_entity_update(EntityInterface $entity) {
  return \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(EntityOperations::class)
    ->entityUpdate($entity);
}


/**
 * Implements hook_entity_type_alter().
 */
function termstatus_entity_type_alter(array &$entity_types) {
  /* @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */

  $entity_types['taxonomy_term']->setAccessClass('Drupal\termstatus\TermAccessControlHandler');
  $entity_types['taxonomy_term']->setFormClass('default', 'Drupal\termstatus\TermForm');
}


function termstatus_form_taxonomy_overview_terms_alter(&$form, \Drupal\Core\Form\FormStateInterface $formState) {

  $form['terms']['#header'] = array_merge(array_slice($form['terms']['#header'], 0, 2, TRUE),
    [t('Status')],
    array_slice($form['terms']['#header'], 2, NULL, TRUE));


  foreach ($form['terms'] as &$term) {
    if (is_array($term) && !empty($term['#term'])) {
      $status['status'] = [
        '#markup' => ($term['#term']->status->value) ? t('Published') : t('Unpublished'),
        '#type' => 'item',

      ];

      $term = array_slice($term, 0, 3, TRUE) +
        $status +
        array_slice($term, 3, NULL, TRUE);
    }
  }
}
